# Copyright (c) 2025 sakib-maho
# Licensed under the MIT License
# See LICENSE file for details

# -*- coding: utf-8 -*-
"""pi_value_cal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j_Vb3jxlgVRKre8qn3YDwKN6rHOTIKhZ
"""

import math
import random
import matplotlib.pyplot as plt
import numpy
from numpy import arange


trail_no = int(input('Enter Trail No : '))
hit = 0
pi = 3.1416
radius = 10.2
origin = [0, 0]
x = []
y = []
inside_x1 = []
inside_y1 = []
outside_x1 = []
outside_y1 = []
inside_circle = []
outside_circle = []
error = []
trail_count = []
ny = []
for i in range(trail_no):
  x.append(random.uniform(-1*radius, radius))
  y.append(random.uniform(0, -1*radius))
  flag = x[i]*x[i]
  #print(f"flag{flag}")
  ny.append(math.sqrt(abs(radius-flag)))
  distance = math.sqrt( ((origin[0]-x[i])**2)+((origin[1]-y[i])**2) )
  error.append(abs(pi-int(distance)))
  trail_count.append(i+1)
  if distance <= radius:
    hit = hit + 1
    inside_circle.append(i)
    inside_x1.append(x[i])
    inside_y1.append(y[i])
  else:
    outside_circle.append(i)
    outside_x1.append(x[i])
    outside_y1.append(y[i])
  
#print(random.random())
#print(random.uniform(0,1))
exp_pi_value = ((hit/trail_no)*((radius*radius)*2))/(radius*radius)
print(x)
print(y)
print(inside_x1)
print(outside_x1)
print(f"Calculated pi value ={exp_pi_value+1}")


x_cords = []
y_cords = []
for i in arange(-10.2, 10.4, 0.2):
    x_cords.append(i)
x_cords[len(x_cords)-1] = 10.2
for x in x_cords:
  y_cords.append((-1*math.sqrt(10.2*10.2 - x*x)))


plt.plot(x_cords, y_cords)
plt.scatter(inside_x1, inside_y1)
plt.scatter(outside_x1, outside_y1)
#plt.plot()
#plt.plot(x, y)

plt.xlabel('X')
plt.ylabel('Y')
plt.title('Hit Vs Miss\n')
plt.show()
print(f"Errors : {error}")
plt.plot(trail_count, error)
plt.xlabel('Trail No')
plt.ylabel('Error')

plt.title('Trail VS. Error\n')

plt.show()

#print(distance)